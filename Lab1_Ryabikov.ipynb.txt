{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Лабораторная работа №1.\n",
        "Рябиков Илья"
      ],
      "metadata": {
        "id": "rXAcAhOF9lAS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 1. Подгрузка библиотек, объявление функций и загрузка данных"
      ],
      "metadata": {
        "id": "BAXQ-O7c95a_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Первым делом подгрузим все библиотеки и данные по аналогии с кодом из аудиторной работы"
      ],
      "metadata": {
        "id": "vm2IGiDG-UA3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "from datetime import date\n",
        "import requests\n"
      ],
      "metadata": {
        "id": "zBSsA08R-jRh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Скопируем функцию перевода российского названия в английское из семинара"
      ],
      "metadata": {
        "id": "KbbqMPx9-9bo"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oTdIaDv-9HJc",
        "outputId": "bc03815f-81a5-4e21-a423-d3fed96e9330"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: transliterate in /usr/local/lib/python3.7/dist-packages (1.10.2)\n",
            "Requirement already satisfied: six>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from transliterate) (1.15.0)\n"
          ]
        }
      ],
      "source": [
        "!pip install transliterate\n",
        "from transliterate import translit\n",
        "\n",
        "def to_latin(s):\n",
        "  \"\"\"Convert letters in *s* from Cyrillic to Latin.\"\"\"\n",
        "  return translit(s, 'ru', reversed=True)\n",
        "\n",
        "# test how it works\n",
        "assert to_latin(s=\"ГАЗПРОМ\") == \"GAZPROM\""
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Достанем данные из файла из семинара"
      ],
      "metadata": {
        "id": "64ueUxQn_JZO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import os\n",
        "\n",
        "local_filename = \"processed_2018.csv\"\n",
        "url = \"https://boodata.s3.eu-central-1.amazonaws.com/processed_2018.csv\"\n",
        "\n",
        "if not os.path.exists(local_filename): # do not execute if file already downloaded\n",
        "   df = pd.read_csv(url)\n",
        "   df.to_csv(local_filename, index=False) # file read abck from this file\n",
        "   if False:                   # swithc off\n",
        "      df.to_excel(\"copy.xlsx\") # sample saving to Excel\n",
        "\n",
        "df = pd.read_csv(local_filename,                    # read remote CSV file\n",
        "                 dtype={'ok1': int, 'region': int}) # specify type for some columns \n",
        "df = df.set_index(\"inn\")                            # set index        \n",
        "df.insert(0, \"title_en\", df.title.map(to_latin))    # insert new column "
      ],
      "metadata": {
        "id": "Ip3t4g0R9Tbq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "А также описание переменных"
      ],
      "metadata": {
        "id": "aFTG9Z8e_NHd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "\n",
        "variables = requests.get(\"https://boodata.s3.eu-central-1.amazonaws.com/variables.json\").json()\n",
        "\n",
        "def whatis(varname):\n",
        "  return variables.get(varname)\n",
        "\n",
        "def unlag(df):\n",
        "  return [col for col in df.columns if not col.endswith(\"lag\")]\n",
        "\n",
        "ru_names = pd.DataFrame([(col, whatis(col)) for col in unlag(df)],\n",
        "           columns=['Название переменной', 'Описание']).set_index('Название переменной')"
      ],
      "metadata": {
        "id": "2c-ta7bv-vdT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 2. Формирование выборки из полного датасета"
      ],
      "metadata": {
        "id": "WazjgRM3_cYi"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Мой родной регион - Челябинская область. Соответственно для анализа отчетности возьмем в датасет именно 74 регион. \n",
        "\n",
        "Как и я, многие молодые люди уезжают из Челябинска, а тем более из менее крупных городов области, поскольку в компаниях области отсутствуют видимые перспективы роста. Тем не менее, фирмы по прежнему работают, следовательно, проанализировав доходность 2018 года, можно будет понять, какое состояние было у компаний, когда я принял решение о переезде из области, была ли угроза их деятельности с точки зрения финансов. "
      ],
      "metadata": {
        "id": "d97qqPUC_g_2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df[df['region']==74]"
      ],
      "metadata": {
        "id": "j_pjPPms_gKr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Для использования в аналитике оставим сами названия компаний, индустрию по ОКВЭД, а также показатели: выручка (в текущем и прошлом году), долгосрочный и краткосрочный долг, общее количество активов, прибыль от продаж, проценты к уплате - этого всего необходимо и достаточно для оценки финансового состояния компаний"
      ],
      "metadata": {
        "id": "fh6JKGKEqowG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df[['title_en', 'title', 'okved','ok1', 'sales', 'sales_lag', 'debt_long', 'debt_short', 'ta', 'profit_oper', 'exp_interest']]"
      ],
      "metadata": {
        "id": "Q30dppgDFb17"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.to_excel('dataset_ryabikov.xlsx')"
      ],
      "metadata": {
        "id": "0gvYSZdhftU-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 3. Расчет финансовых показателей"
      ],
      "metadata": {
        "id": "6GFwMkWSnCzI"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Посчитаем 3 параметра, которые используются в одном из банков (инсайт) для определения качества финансового состояния клиентов:\n",
        "\n",
        "*будем считать, что profit_oper = EBIT, поскольку EBIT = sales - sales costs - operating costs = sales - costs = EBIT\n",
        "\n",
        "ROA = Выручка/Активы - показывает, насколько доходны активы компании\n",
        "Долг/EBIT - показывает, насколько прибыль компании помогает покрывать долг\n",
        "ICR = EBIT/Проценты к уплате.\n",
        "\n",
        "Также посчитаем показатели роста выручки (выручка в этом году/выручка в прошлом году), маржинальности компании (прибыль/выручка) и закредитованности компании (долг/активы)."
      ],
      "metadata": {
        "id": "vvtVaB3xngDc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"debt\"] = df.debt_long + df.debt_short #total_debt\n",
        "df[\"leverage\"] = df.debt / df.ta \n",
        "df[\"profit\"] = df[\"profit_oper\"] #EBIT\n",
        "df[\"roa\"] = df.sales / df.ta        # return on assets  \n",
        "df[\"margin\"] = df.profit / df.sales # profitability\n",
        "df['debt/profit'] = df['debt']/df['profit'] # income generated to pay debt\n",
        "df[\"icr\"] = df.profit/df.exp_interest             # interest coverage ratio\n",
        "df[\"growth\"] = df.sales / df.sales_lag #growth rate of sales"
      ],
      "metadata": {
        "id": "fgQtawQ7HaaY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Посчитаем средние показатели"
      ],
      "metadata": {
        "id": "IM1V43XPueZG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pd.DataFrame(df.mean())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 606
        },
        "id": "QubzkIVAucgp",
        "outputId": "01baef49-2dc9-451f-adec-c4b057675fc6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
            "  \"\"\"Entry point for launching an IPython kernel.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      0\n",
              "ok1           37.870504\n",
              "sales          7.439496\n",
              "sales_lag      6.607791\n",
              "debt_long      1.847291\n",
              "debt_short     0.597263\n",
              "ta             7.633158\n",
              "profit_oper    0.884558\n",
              "exp_interest   0.150493\n",
              "debt           2.444554\n",
              "leverage       0.263750\n",
              "profit         0.884558\n",
              "roa            1.062241\n",
              "margin             -inf\n",
              "debt/profit         NaN\n",
              "icr                 NaN\n",
              "growth              inf"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fefb9297-0eb5-4cb6-aa44-bca168ee81ac\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ok1</th>\n",
              "      <td>37.870504</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sales</th>\n",
              "      <td>7.439496</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sales_lag</th>\n",
              "      <td>6.607791</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>debt_long</th>\n",
              "      <td>1.847291</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>debt_short</th>\n",
              "      <td>0.597263</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ta</th>\n",
              "      <td>7.633158</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>profit_oper</th>\n",
              "      <td>0.884558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>exp_interest</th>\n",
              "      <td>0.150493</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>debt</th>\n",
              "      <td>2.444554</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>leverage</th>\n",
              "      <td>0.263750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>profit</th>\n",
              "      <td>0.884558</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>roa</th>\n",
              "      <td>1.062241</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>margin</th>\n",
              "      <td>-inf</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>debt/profit</th>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>icr</th>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>growth</th>\n",
              "      <td>inf</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fefb9297-0eb5-4cb6-aa44-bca168ee81ac')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fefb9297-0eb5-4cb6-aa44-bca168ee81ac button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fefb9297-0eb5-4cb6-aa44-bca168ee81ac');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Заметим, что из-за деления на 0, в некоторых показателях есть NaN и inf. Посмотрим, сколько таких компаний"
      ],
      "metadata": {
        "id": "XhaZqsUEuuta"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df[df.isin([np.nan, np.inf, -np.inf]).any(1)].shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hIRkOnVlChYz",
        "outputId": "6b83194e-7914-4b00-9d53-67fba91b95a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(102, 19)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Таких компаний достаточно много, но если мы удалим эти значения, в датасете останутся только нормальные значения, без нулевых значений прибыли или выручки. Да, с одной стороны неправильно удалять почти половину датасета, но с другой - 176 компаний более чем достаточно для анализа, а эти компании из-за нулевых показателей прибыли/продаж/прошлогодней выручки могут быть просто неактивными и близкими к закрытию или банкротству (да, тогда мы их не включаем в анализе в пункте 5, но в данном случае мера кажется мне оправданной)"
      ],
      "metadata": {
        "id": "peTGyPMIvi6L"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_copy = df.copy()\n",
        "df = df[~df.isin([np.nan, np.inf, -np.inf]).any(1)]"
      ],
      "metadata": {
        "id": "UoFgIkPquFvN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Расчитаем средние значения без выбросов"
      ],
      "metadata": {
        "id": "miKaZ_Ufv_UU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "aver_values = pd.DataFrame(df.mean(), columns=['aver_value']).reset_index().rename(columns={'index':'parameter'})\n",
        "aver_values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 606
        },
        "id": "Bf2qE5NFvdoA",
        "outputId": "b7f2d114-3109-489d-ee2f-3c386c094720"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.\n",
            "  \"\"\"Entry point for launching an IPython kernel.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       parameter  aver_value\n",
              "0            ok1   34.568182\n",
              "1          sales    9.903358\n",
              "2      sales_lag    8.871284\n",
              "3      debt_long    2.453778\n",
              "4     debt_short    0.905705\n",
              "5             ta    9.942188\n",
              "6    profit_oper    1.322551\n",
              "7   exp_interest    0.224932\n",
              "8           debt    3.359483\n",
              "9       leverage    0.344601\n",
              "10        profit    1.322551\n",
              "11           roa    1.066894\n",
              "12        margin    0.085409\n",
              "13   debt/profit   -9.388814\n",
              "14           icr   54.106707\n",
              "15        growth    1.315948"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-48e1f397-b6ff-427d-a2a5-60aaade31c20\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>parameter</th>\n",
              "      <th>aver_value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>ok1</td>\n",
              "      <td>34.568182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>sales</td>\n",
              "      <td>9.903358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>sales_lag</td>\n",
              "      <td>8.871284</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>debt_long</td>\n",
              "      <td>2.453778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>debt_short</td>\n",
              "      <td>0.905705</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>ta</td>\n",
              "      <td>9.942188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>profit_oper</td>\n",
              "      <td>1.322551</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>exp_interest</td>\n",
              "      <td>0.224932</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>debt</td>\n",
              "      <td>3.359483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>leverage</td>\n",
              "      <td>0.344601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>profit</td>\n",
              "      <td>1.322551</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>roa</td>\n",
              "      <td>1.066894</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>margin</td>\n",
              "      <td>0.085409</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>debt/profit</td>\n",
              "      <td>-9.388814</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>icr</td>\n",
              "      <td>54.106707</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>growth</td>\n",
              "      <td>1.315948</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48e1f397-b6ff-427d-a2a5-60aaade31c20')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-48e1f397-b6ff-427d-a2a5-60aaade31c20 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-48e1f397-b6ff-427d-a2a5-60aaade31c20');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 4. Возьмем одну компанию из датасета"
      ],
      "metadata": {
        "id": "Te8IACBHwK0Q"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Компания которую будем рассматривать относительно других - МАКФА, которая находится прямо напротив моего дома, и входит в [топ-30 работадателей России](https://chelyabinsk.bezformata.com/listnews/kompaniy-chelyabinskoy-oblasti-voshli/102775643/#:~:text=%D0%92%20%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D1%83%20%D0%BB%D0%B8%D0%B4%D0%B5%D1%80%D0%BE%D0%B2%20%D1%81%D1%80%D0%B5%D0%B4%D0%B8%20%D0%BA%D1%80%D1%83%D0%BF%D0%BD%D0%B5%D0%B9%D1%88%D0%B8%D1%85,%C2%BB%20(105%2D%D0%B5).)\n",
        "\n",
        "Поскольку цель данной аналитики - понять, насколько перспективны с финансовой точки зрения работадатели Челябинской области, выбор компании согласуется с целью всего анализа"
      ],
      "metadata": {
        "id": "KofKxB_txeYv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "one_firm = df.loc[7438015885, :]"
      ],
      "metadata": {
        "id": "qAH9-VOiv79A"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "one_firm_df = pd.DataFrame(one_firm).reset_index().rename(columns={'index': 'parameter',7438015885:'MAKFA'})\n",
        "one_firm_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 645
        },
        "id": "rZN3iNV-wXMv",
        "outputId": "648915b8-f71b-42c8-d958-87b0d03cc239"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       parameter     MAKFA\n",
              "0       title_en     MAKFA\n",
              "1          title     МАКФА\n",
              "2          okved   10.61.2\n",
              "3            ok1        10\n",
              "4          sales    15.232\n",
              "5      sales_lag    15.391\n",
              "6      debt_long     0.027\n",
              "7     debt_short     1.537\n",
              "8             ta     7.826\n",
              "9    profit_oper     3.254\n",
              "10  exp_interest     0.046\n",
              "11          debt     1.564\n",
              "12      leverage  0.199847\n",
              "13        profit     3.254\n",
              "14           roa  1.946333\n",
              "15        margin  0.213629\n",
              "16   debt/profit  0.480639\n",
              "17           icr  70.73913\n",
              "18        growth  0.989669"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-523f4279-76bf-41d1-ae5d-182c380a54e9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>parameter</th>\n",
              "      <th>MAKFA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>title_en</td>\n",
              "      <td>MAKFA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>title</td>\n",
              "      <td>МАКФА</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>okved</td>\n",
              "      <td>10.61.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ok1</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>sales</td>\n",
              "      <td>15.232</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>sales_lag</td>\n",
              "      <td>15.391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>debt_long</td>\n",
              "      <td>0.027</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>debt_short</td>\n",
              "      <td>1.537</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>ta</td>\n",
              "      <td>7.826</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>profit_oper</td>\n",
              "      <td>3.254</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>exp_interest</td>\n",
              "      <td>0.046</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>debt</td>\n",
              "      <td>1.564</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>leverage</td>\n",
              "      <td>0.199847</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>profit</td>\n",
              "      <td>3.254</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>roa</td>\n",
              "      <td>1.946333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>margin</td>\n",
              "      <td>0.213629</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>debt/profit</td>\n",
              "      <td>0.480639</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>icr</td>\n",
              "      <td>70.73913</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>growth</td>\n",
              "      <td>0.989669</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-523f4279-76bf-41d1-ae5d-182c380a54e9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-523f4279-76bf-41d1-ae5d-182c380a54e9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-523f4279-76bf-41d1-ae5d-182c380a54e9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "compare = pd.merge(one_firm_df, aver_values, how='inner', on='parameter')\n",
        "compare"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        },
        "id": "Eg9pyHPJ1AtM",
        "outputId": "6f9dc55d-4604-4871-a951-12874bd99637"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       parameter     MAKFA  aver_value\n",
              "0            ok1        10   34.568182\n",
              "1          sales    15.232    9.903358\n",
              "2      sales_lag    15.391    8.871284\n",
              "3      debt_long     0.027    2.453778\n",
              "4     debt_short     1.537    0.905705\n",
              "5             ta     7.826    9.942188\n",
              "6    profit_oper     3.254    1.322551\n",
              "7   exp_interest     0.046    0.224932\n",
              "8           debt     1.564    3.359483\n",
              "9       leverage  0.199847    0.344601\n",
              "10        profit     3.254    1.322551\n",
              "11           roa  1.946333    1.066894\n",
              "12        margin  0.213629    0.085409\n",
              "13   debt/profit  0.480639   -9.388814\n",
              "14           icr  70.73913   54.106707\n",
              "15        growth  0.989669    1.315948"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0491cb0d-7737-4a70-b7e5-47692f83523d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>parameter</th>\n",
              "      <th>MAKFA</th>\n",
              "      <th>aver_value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>ok1</td>\n",
              "      <td>10</td>\n",
              "      <td>34.568182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>sales</td>\n",
              "      <td>15.232</td>\n",
              "      <td>9.903358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>sales_lag</td>\n",
              "      <td>15.391</td>\n",
              "      <td>8.871284</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>debt_long</td>\n",
              "      <td>0.027</td>\n",
              "      <td>2.453778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>debt_short</td>\n",
              "      <td>1.537</td>\n",
              "      <td>0.905705</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>ta</td>\n",
              "      <td>7.826</td>\n",
              "      <td>9.942188</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>profit_oper</td>\n",
              "      <td>3.254</td>\n",
              "      <td>1.322551</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>exp_interest</td>\n",
              "      <td>0.046</td>\n",
              "      <td>0.224932</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>debt</td>\n",
              "      <td>1.564</td>\n",
              "      <td>3.359483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>leverage</td>\n",
              "      <td>0.199847</td>\n",
              "      <td>0.344601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>profit</td>\n",
              "      <td>3.254</td>\n",
              "      <td>1.322551</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>roa</td>\n",
              "      <td>1.946333</td>\n",
              "      <td>1.066894</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>margin</td>\n",
              "      <td>0.213629</td>\n",
              "      <td>0.085409</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>debt/profit</td>\n",
              "      <td>0.480639</td>\n",
              "      <td>-9.388814</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>icr</td>\n",
              "      <td>70.73913</td>\n",
              "      <td>54.106707</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>growth</td>\n",
              "      <td>0.989669</td>\n",
              "      <td>1.315948</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0491cb0d-7737-4a70-b7e5-47692f83523d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0491cb0d-7737-4a70-b7e5-47692f83523d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0491cb0d-7737-4a70-b7e5-47692f83523d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "По всем показателям, кроме роста выручки, компания МАКФА выглядит лучше других компаний области. Но, возможно, из-за снижения выручки, в будущем можно ожидать и снижения остальных показателей, поэтому пока что выбирать в качестве места работы МАКФА я не буду)\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "9rtJeRAJyGbV"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 5. Поиск компаний-банкротов"
      ],
      "metadata": {
        "id": "mxTbSckJ2CYL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Определим функции поиска по названию из семинара"
      ],
      "metadata": {
        "id": "gblA5Q8n2doR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def df_contains(df, name):\n",
        "  return df.title_en.str.lower().str.contains(name.lower())\n",
        "\n",
        "def find(df, name, not_names=[]):\n",
        "  ix = df_contains(df, name)\n",
        "  for not_name in not_names:    \n",
        "    ix = ix & ~df_contains(df, not_name)\n",
        "  return ix\n",
        "cols = ['title_en', 'region', 'sales',  'ta']"
      ],
      "metadata": {
        "id": "dBGw5vn32X1Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Найдем компании по которым открыто конкурсное производство"
      ],
      "metadata": {
        "id": "6RjGz-yB2kYa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.loc[find(df, \"konkursnoe\"), ['title_en','ta']].sort_values('ta', ascending = False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81
        },
        "id": "A2megboP2GLJ",
        "outputId": "0299bf2b-a3f4-4b46-a3e9-d28e32e81abf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [title_en, ta]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a88201c7-8bd6-4b05-be7b-b9cd8a308e2f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title_en</th>\n",
              "      <th>ta</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>inn</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a88201c7-8bd6-4b05-be7b-b9cd8a308e2f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a88201c7-8bd6-4b05-be7b-b9cd8a308e2f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a88201c7-8bd6-4b05-be7b-b9cd8a308e2f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "В моей выборке нет компаний-банкротов. Найдем близких к банкротству: компании, у которых высокая долговая нагрузка (выше 1.5), высокий или отрицательный показатель debt/profit (нормальный от 0 до 4 согласно методике банка)"
      ],
      "metadata": {
        "id": "tzpgGy6o3atN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df[(df['leverage']>1.5) & ((df['debt/profit']>4) | (df['debt/profit']<0))]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 259
        },
        "id": "2dyQSXp53k8V",
        "outputId": "a4cd2df9-5d99-4d09-f7a1-b83b14572656"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                           title_en  \\\n",
              "inn                                                   \n",
              "7452027843  ChELJaBINSKIJ TRAKTORNYJ ZAVOD-URALTRAK   \n",
              "7451264986                               OTEL'STROJ   \n",
              "\n",
              "                                            title  okved  ok1  sales  \\\n",
              "inn                                                                    \n",
              "7452027843  ЧЕЛЯБИНСКИЙ ТРАКТОРНЫЙ ЗАВОД-УРАЛТРАК  28.92   28  5.293   \n",
              "7451264986                             ОТЕЛЬСТРОЙ  55.10   55  0.232   \n",
              "\n",
              "            sales_lag  debt_long  debt_short     ta  profit_oper  \\\n",
              "inn                                                                \n",
              "7452027843      7.090      9.475       3.515  8.041       -1.147   \n",
              "7451264986      0.197      2.566       0.038  1.573       -0.101   \n",
              "\n",
              "            exp_interest    debt  leverage  profit       roa    margin  \\\n",
              "inn                                                                      \n",
              "7452027843         1.134  12.990  1.615471  -1.147  0.658251 -0.216701   \n",
              "7451264986         0.038   2.604  1.655435  -0.101  0.147489 -0.435345   \n",
              "\n",
              "            debt/profit       icr    growth  \n",
              "inn                                          \n",
              "7452027843   -11.325196 -1.011464  0.746544  \n",
              "7451264986   -25.782178 -2.657895  1.177665  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ce1be0ed-1c2f-40f9-8f71-4a68a66e52ea\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title_en</th>\n",
              "      <th>title</th>\n",
              "      <th>okved</th>\n",
              "      <th>ok1</th>\n",
              "      <th>sales</th>\n",
              "      <th>sales_lag</th>\n",
              "      <th>debt_long</th>\n",
              "      <th>debt_short</th>\n",
              "      <th>ta</th>\n",
              "      <th>profit_oper</th>\n",
              "      <th>exp_interest</th>\n",
              "      <th>debt</th>\n",
              "      <th>leverage</th>\n",
              "      <th>profit</th>\n",
              "      <th>roa</th>\n",
              "      <th>margin</th>\n",
              "      <th>debt/profit</th>\n",
              "      <th>icr</th>\n",
              "      <th>growth</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>inn</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>7452027843</th>\n",
              "      <td>ChELJaBINSKIJ TRAKTORNYJ ZAVOD-URALTRAK</td>\n",
              "      <td>ЧЕЛЯБИНСКИЙ ТРАКТОРНЫЙ ЗАВОД-УРАЛТРАК</td>\n",
              "      <td>28.92</td>\n",
              "      <td>28</td>\n",
              "      <td>5.293</td>\n",
              "      <td>7.090</td>\n",
              "      <td>9.475</td>\n",
              "      <td>3.515</td>\n",
              "      <td>8.041</td>\n",
              "      <td>-1.147</td>\n",
              "      <td>1.134</td>\n",
              "      <td>12.990</td>\n",
              "      <td>1.615471</td>\n",
              "      <td>-1.147</td>\n",
              "      <td>0.658251</td>\n",
              "      <td>-0.216701</td>\n",
              "      <td>-11.325196</td>\n",
              "      <td>-1.011464</td>\n",
              "      <td>0.746544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7451264986</th>\n",
              "      <td>OTEL'STROJ</td>\n",
              "      <td>ОТЕЛЬСТРОЙ</td>\n",
              "      <td>55.10</td>\n",
              "      <td>55</td>\n",
              "      <td>0.232</td>\n",
              "      <td>0.197</td>\n",
              "      <td>2.566</td>\n",
              "      <td>0.038</td>\n",
              "      <td>1.573</td>\n",
              "      <td>-0.101</td>\n",
              "      <td>0.038</td>\n",
              "      <td>2.604</td>\n",
              "      <td>1.655435</td>\n",
              "      <td>-0.101</td>\n",
              "      <td>0.147489</td>\n",
              "      <td>-0.435345</td>\n",
              "      <td>-25.782178</td>\n",
              "      <td>-2.657895</td>\n",
              "      <td>1.177665</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce1be0ed-1c2f-40f9-8f71-4a68a66e52ea')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ce1be0ed-1c2f-40f9-8f71-4a68a66e52ea button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ce1be0ed-1c2f-40f9-8f71-4a68a66e52ea');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2 компании имеют опасное превышение долга над активами, а также нестабильные денежные потоки для покрытия этого долга. Именно они в первую очередь должны считаться высокорискованными и близкими к банкротству"
      ],
      "metadata": {
        "id": "AZvJzqWu58_7"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 6. Построим график зависимости финансовых показателей"
      ],
      "metadata": {
        "id": "RK36jM_v3mYP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Построим зависимость темпов роста выручки от закредитованности компании. Основная гипотеза - компании, получившие большую долговую нагрузку, расчитывали нарастить, выручку, что должно отразиться на графике"
      ],
      "metadata": {
        "id": "PIcbi8Rh9SdF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.plot.scatter(x='leverage', y='growth', alpha=0.5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "id": "PfL2q2AX-Quk",
        "outputId": "b13b296f-f05e-4120-a5c3-37a5c779433c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f96e697de50>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Гипотеза не сработала - показатель темпа роста выручки не зависит от закредитованности. Визуально график не имеет никакой зависимости и дальше тестировать коэффициенты при уравнении линейной регрессии нет смысла."
      ],
      "metadata": {
        "id": "shcOu0hG-6gx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Также посмотрим зависимость средней выручки от индустрии (по первому значению в ОКВЭДе). В Челябинской области очень много металлургических предприятий, скорее всего именно ОКВЭД 24 даст самый высокий результат"
      ],
      "metadata": {
        "id": "zHgnT7HXcTpr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "from matplotlib import rcParams\n",
        "\n",
        "rcParams['figure.figsize'] = 12,8\n",
        "sns.barplot(data=df, x=\"ok1\", y=\"sales\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "38QALuu3YxTx",
        "outputId": "d0b31112-0bc8-42e3-a04b-1355fda22155"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f96d8f53d10>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Да, совершенно верно, ОКВЭД 24 металлургия имеет наивысшую среднюю выручку, но интересно, что также довольно высокие значения на ОКВЭДе 47 - розничная торговля, и 19 - производство кокса и нефтепродуктов (область не славится нефтяными компаниями, но тем не менее, выручку данный бизнес в области приносит)"
      ],
      "metadata": {
        "id": "-NNtzyLGcvQu"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 7. Вывод"
      ],
      "metadata": {
        "id": "gdRi7u5F4L7z"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Проанализировав финансовую отчетность челябинских компаний, я обнаружил, что многие компании (почти половина) имеют нулевые значения в своей отчетности по выручке/прибыли/уплате процентов. Это говорит о том, что либо компании не слишком хорошо отчитываются, из-за чего появляются пробелы в данных, либо что многие компании имеют не устойчивое финансовое состояние, и либо будут скоро закрыты, либо уже неактивны.\n",
        "\n",
        "Две компании очень близки к банкротству - их закредитованность высока, а возможность тратить прибыль на покрытие долгов крайне сомнительна. В них точно лучше не идти работать.\n",
        "\n",
        "Компания, которая казалась мне переспективной для работы в ней и входит в топ-30 работадателей, действительно имеет неплохую отчетность относительно средних показателей по области. Но снижение выручки может сигнализировать о нестабильности и лучше будет посмотреть на отчетность этой компании в динамике.\n",
        "\n",
        "А самыми перспективными в области конечно, как и ожидалось, являются металлургические гиганты, поэтому все на завод!"
      ],
      "metadata": {
        "id": "Is5GRx2w4PgN"
      }
    }
  ]
}